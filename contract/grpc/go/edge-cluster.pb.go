// Code generated by protoc-gen-go. DO NOT EDIT.
// source: edge-cluster.proto

package edgecluster

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// The different error types
type Error int32

const (
	// Indicates the operation was successful
	Error_NO_ERROR Error = 0
	// Indicates the operation fail with unknown error
	Error_UNKNOWN Error = 1
	// Indicates the edge cluster already exists
	Error_EDGE_CLUSTER_ALREADY_EXISTS Error = 2
	// Indicates the edge cluster does not exist
	Error_EDGE_CLUSTER_NOT_FOUND Error = 3
	// Indicates the provided values for he operation were invalid
	Error_BAD_REQUEST Error = 4
)

var Error_name = map[int32]string{
	0: "NO_ERROR",
	1: "UNKNOWN",
	2: "EDGE_CLUSTER_ALREADY_EXISTS",
	3: "EDGE_CLUSTER_NOT_FOUND",
	4: "BAD_REQUEST",
}

var Error_value = map[string]int32{
	"NO_ERROR":                    0,
	"UNKNOWN":                     1,
	"EDGE_CLUSTER_ALREADY_EXISTS": 2,
	"EDGE_CLUSTER_NOT_FOUND":      3,
	"BAD_REQUEST":                 4,
}

func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}

func (Error) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{0}
}

//*
// The different sorting direction
type SortingDirection int32

const (
	// Indicates result data must be sorted from low to high sequence
	SortingDirection_ASCENDING SortingDirection = 0
	// Indicates result data must be sorted from high to low sequence
	SortingDirection_DESCENDING SortingDirection = 1
)

var SortingDirection_name = map[int32]string{
	0: "ASCENDING",
	1: "DESCENDING",
}

var SortingDirection_value = map[string]int32{
	"ASCENDING":  0,
	"DESCENDING": 1,
}

func (x SortingDirection) String() string {
	return proto.EnumName(SortingDirection_name, int32(x))
}

func (SortingDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{1}
}

//*
// The edge cluster object
type EdgeCluster struct {
	// The unique tenant identifier that owns the edge cluster
	TenantID string `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	// The edge cluster name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// cluster public ip address
	ClusterPublicIPAddress string   `protobuf:"bytes,3,opt,name=clusterPublicIPAddress,proto3" json:"clusterPublicIPAddress,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *EdgeCluster) Reset()         { *m = EdgeCluster{} }
func (m *EdgeCluster) String() string { return proto.CompactTextString(m) }
func (*EdgeCluster) ProtoMessage()    {}
func (*EdgeCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{0}
}

func (m *EdgeCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeCluster.Unmarshal(m, b)
}
func (m *EdgeCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeCluster.Marshal(b, m, deterministic)
}
func (m *EdgeCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeCluster.Merge(m, src)
}
func (m *EdgeCluster) XXX_Size() int {
	return xxx_messageInfo_EdgeCluster.Size(m)
}
func (m *EdgeCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeCluster.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeCluster proto.InternalMessageInfo

func (m *EdgeCluster) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

func (m *EdgeCluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EdgeCluster) GetClusterPublicIPAddress() string {
	if m != nil {
		return m.ClusterPublicIPAddress
	}
	return ""
}

//*
// Request to create a new edge cluster
type CreateEdgeClusterRequest struct {
	// The edge cluster object
	EdgeCluster          *EdgeCluster `protobuf:"bytes,1,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateEdgeClusterRequest) Reset()         { *m = CreateEdgeClusterRequest{} }
func (m *CreateEdgeClusterRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEdgeClusterRequest) ProtoMessage()    {}
func (*CreateEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{1}
}

func (m *CreateEdgeClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEdgeClusterRequest.Unmarshal(m, b)
}
func (m *CreateEdgeClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEdgeClusterRequest.Marshal(b, m, deterministic)
}
func (m *CreateEdgeClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEdgeClusterRequest.Merge(m, src)
}
func (m *CreateEdgeClusterRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEdgeClusterRequest.Size(m)
}
func (m *CreateEdgeClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEdgeClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEdgeClusterRequest proto.InternalMessageInfo

func (m *CreateEdgeClusterRequest) GetEdgeCluster() *EdgeCluster {
	if m != nil {
		return m.EdgeCluster
	}
	return nil
}

//*
// Response contains the result of creating a new edge cluster
type CreateEdgeClusterResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,3,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	// The created edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,4,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	// The cursor defines the position of the edge cluster in the repository that can be later
	// referred to using pagination information
	Cursor               string   `protobuf:"bytes,5,opt,name=cursor,proto3" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEdgeClusterResponse) Reset()         { *m = CreateEdgeClusterResponse{} }
func (m *CreateEdgeClusterResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEdgeClusterResponse) ProtoMessage()    {}
func (*CreateEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{2}
}

func (m *CreateEdgeClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEdgeClusterResponse.Unmarshal(m, b)
}
func (m *CreateEdgeClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEdgeClusterResponse.Marshal(b, m, deterministic)
}
func (m *CreateEdgeClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEdgeClusterResponse.Merge(m, src)
}
func (m *CreateEdgeClusterResponse) XXX_Size() int {
	return xxx_messageInfo_CreateEdgeClusterResponse.Size(m)
}
func (m *CreateEdgeClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEdgeClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEdgeClusterResponse proto.InternalMessageInfo

func (m *CreateEdgeClusterResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *CreateEdgeClusterResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *CreateEdgeClusterResponse) GetEdgeClusterID() string {
	if m != nil {
		return m.EdgeClusterID
	}
	return ""
}

func (m *CreateEdgeClusterResponse) GetEdgeCluster() *EdgeCluster {
	if m != nil {
		return m.EdgeCluster
	}
	return nil
}

func (m *CreateEdgeClusterResponse) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

//* Request to read an existing edge cluster
type ReadEdgeClusterRequest struct {
	// The unique edge cluster identifier
	EdgeClusterID        string   `protobuf:"bytes,1,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadEdgeClusterRequest) Reset()         { *m = ReadEdgeClusterRequest{} }
func (m *ReadEdgeClusterRequest) String() string { return proto.CompactTextString(m) }
func (*ReadEdgeClusterRequest) ProtoMessage()    {}
func (*ReadEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{3}
}

func (m *ReadEdgeClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadEdgeClusterRequest.Unmarshal(m, b)
}
func (m *ReadEdgeClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadEdgeClusterRequest.Marshal(b, m, deterministic)
}
func (m *ReadEdgeClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadEdgeClusterRequest.Merge(m, src)
}
func (m *ReadEdgeClusterRequest) XXX_Size() int {
	return xxx_messageInfo_ReadEdgeClusterRequest.Size(m)
}
func (m *ReadEdgeClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadEdgeClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadEdgeClusterRequest proto.InternalMessageInfo

func (m *ReadEdgeClusterRequest) GetEdgeClusterID() string {
	if m != nil {
		return m.EdgeClusterID
	}
	return ""
}

//*
// Response contains the result of reading an existing edge cluster
type ReadEdgeClusterResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The edge cluster object
	EdgeCluster          *EdgeCluster `protobuf:"bytes,3,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReadEdgeClusterResponse) Reset()         { *m = ReadEdgeClusterResponse{} }
func (m *ReadEdgeClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ReadEdgeClusterResponse) ProtoMessage()    {}
func (*ReadEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{4}
}

func (m *ReadEdgeClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadEdgeClusterResponse.Unmarshal(m, b)
}
func (m *ReadEdgeClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadEdgeClusterResponse.Marshal(b, m, deterministic)
}
func (m *ReadEdgeClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadEdgeClusterResponse.Merge(m, src)
}
func (m *ReadEdgeClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ReadEdgeClusterResponse.Size(m)
}
func (m *ReadEdgeClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadEdgeClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadEdgeClusterResponse proto.InternalMessageInfo

func (m *ReadEdgeClusterResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *ReadEdgeClusterResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ReadEdgeClusterResponse) GetEdgeCluster() *EdgeCluster {
	if m != nil {
		return m.EdgeCluster
	}
	return nil
}

//*
// Request to update an existing edge cluster
type UpdateEdgeClusterRequest struct {
	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,1,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	// The edge cluster object contains the updated edge cluster details to update
	EdgeCluster *EdgeCluster `protobuf:"bytes,2,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	//K3s secret value to update
	K3SClusterSecret     string   `protobuf:"bytes,3,opt,name=K3SClusterSecret,proto3" json:"K3SClusterSecret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEdgeClusterRequest) Reset()         { *m = UpdateEdgeClusterRequest{} }
func (m *UpdateEdgeClusterRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEdgeClusterRequest) ProtoMessage()    {}
func (*UpdateEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{5}
}

func (m *UpdateEdgeClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEdgeClusterRequest.Unmarshal(m, b)
}
func (m *UpdateEdgeClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEdgeClusterRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEdgeClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEdgeClusterRequest.Merge(m, src)
}
func (m *UpdateEdgeClusterRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEdgeClusterRequest.Size(m)
}
func (m *UpdateEdgeClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEdgeClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEdgeClusterRequest proto.InternalMessageInfo

func (m *UpdateEdgeClusterRequest) GetEdgeClusterID() string {
	if m != nil {
		return m.EdgeClusterID
	}
	return ""
}

func (m *UpdateEdgeClusterRequest) GetEdgeCluster() *EdgeCluster {
	if m != nil {
		return m.EdgeCluster
	}
	return nil
}

func (m *UpdateEdgeClusterRequest) GetK3SClusterSecret() string {
	if m != nil {
		return m.K3SClusterSecret
	}
	return ""
}

//*
// Response contains the result of updating an existing edge cluster
type UpdateEdgeClusterResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The updated edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,3,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	// The cursor defines the position of the edge cluster in the repository that can be later
	// referred to using pagination information
	Cursor               string   `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEdgeClusterResponse) Reset()         { *m = UpdateEdgeClusterResponse{} }
func (m *UpdateEdgeClusterResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateEdgeClusterResponse) ProtoMessage()    {}
func (*UpdateEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{6}
}

func (m *UpdateEdgeClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEdgeClusterResponse.Unmarshal(m, b)
}
func (m *UpdateEdgeClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEdgeClusterResponse.Marshal(b, m, deterministic)
}
func (m *UpdateEdgeClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEdgeClusterResponse.Merge(m, src)
}
func (m *UpdateEdgeClusterResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateEdgeClusterResponse.Size(m)
}
func (m *UpdateEdgeClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEdgeClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEdgeClusterResponse proto.InternalMessageInfo

func (m *UpdateEdgeClusterResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *UpdateEdgeClusterResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *UpdateEdgeClusterResponse) GetEdgeCluster() *EdgeCluster {
	if m != nil {
		return m.EdgeCluster
	}
	return nil
}

func (m *UpdateEdgeClusterResponse) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

//*
// Request to delete an existing edge cluster
type DeleteEdgeClusterRequest struct {
	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,1,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	// The edge cluster object contains the edge cluster details to delete
	EdgeCluster          *EdgeCluster `protobuf:"bytes,2,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteEdgeClusterRequest) Reset()         { *m = DeleteEdgeClusterRequest{} }
func (m *DeleteEdgeClusterRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEdgeClusterRequest) ProtoMessage()    {}
func (*DeleteEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{7}
}

func (m *DeleteEdgeClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEdgeClusterRequest.Unmarshal(m, b)
}
func (m *DeleteEdgeClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEdgeClusterRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEdgeClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEdgeClusterRequest.Merge(m, src)
}
func (m *DeleteEdgeClusterRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEdgeClusterRequest.Size(m)
}
func (m *DeleteEdgeClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEdgeClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEdgeClusterRequest proto.InternalMessageInfo

func (m *DeleteEdgeClusterRequest) GetEdgeClusterID() string {
	if m != nil {
		return m.EdgeClusterID
	}
	return ""
}

func (m *DeleteEdgeClusterRequest) GetEdgeCluster() *EdgeCluster {
	if m != nil {
		return m.EdgeCluster
	}
	return nil
}

//*
// Response contains the result of deleting an existing edge cluster
type DeleteEdgeClusterResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEdgeClusterResponse) Reset()         { *m = DeleteEdgeClusterResponse{} }
func (m *DeleteEdgeClusterResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteEdgeClusterResponse) ProtoMessage()    {}
func (*DeleteEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{8}
}

func (m *DeleteEdgeClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEdgeClusterResponse.Unmarshal(m, b)
}
func (m *DeleteEdgeClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEdgeClusterResponse.Marshal(b, m, deterministic)
}
func (m *DeleteEdgeClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEdgeClusterResponse.Merge(m, src)
}
func (m *DeleteEdgeClusterResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteEdgeClusterResponse.Size(m)
}
func (m *DeleteEdgeClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEdgeClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEdgeClusterResponse proto.InternalMessageInfo

func (m *DeleteEdgeClusterResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *DeleteEdgeClusterResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

//*
// The pagination information compatible with graphql-relay connection definition, for more information visit:
// https://facebook.github.io/relay/graphql/connections.htm
type Pagination struct {
	HasFirst             bool     `protobuf:"varint,1,opt,name=hasFirst,proto3" json:"hasFirst,omitempty"`
	First                int32    `protobuf:"varint,2,opt,name=first,proto3" json:"first,omitempty"`
	HasAfter             bool     `protobuf:"varint,3,opt,name=hasAfter,proto3" json:"hasAfter,omitempty"`
	After                string   `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	HasLast              bool     `protobuf:"varint,5,opt,name=hasLast,proto3" json:"hasLast,omitempty"`
	Last                 int32    `protobuf:"varint,6,opt,name=last,proto3" json:"last,omitempty"`
	HasBefore            bool     `protobuf:"varint,7,opt,name=hasBefore,proto3" json:"hasBefore,omitempty"`
	Before               string   `protobuf:"bytes,8,opt,name=before,proto3" json:"before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{9}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetHasFirst() bool {
	if m != nil {
		return m.HasFirst
	}
	return false
}

func (m *Pagination) GetFirst() int32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *Pagination) GetHasAfter() bool {
	if m != nil {
		return m.HasAfter
	}
	return false
}

func (m *Pagination) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *Pagination) GetHasLast() bool {
	if m != nil {
		return m.HasLast
	}
	return false
}

func (m *Pagination) GetLast() int32 {
	if m != nil {
		return m.Last
	}
	return 0
}

func (m *Pagination) GetHasBefore() bool {
	if m != nil {
		return m.HasBefore
	}
	return false
}

func (m *Pagination) GetBefore() string {
	if m != nil {
		return m.Before
	}
	return ""
}

//*
// Defines the pair of values that are used to determine how the result data should be sorted.
type SortingOptionPair struct {
	// The name of the field on
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// THe sorting direction
	Direction            SortingDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=edgecluster.SortingDirection" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SortingOptionPair) Reset()         { *m = SortingOptionPair{} }
func (m *SortingOptionPair) String() string { return proto.CompactTextString(m) }
func (*SortingOptionPair) ProtoMessage()    {}
func (*SortingOptionPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{10}
}

func (m *SortingOptionPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortingOptionPair.Unmarshal(m, b)
}
func (m *SortingOptionPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortingOptionPair.Marshal(b, m, deterministic)
}
func (m *SortingOptionPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortingOptionPair.Merge(m, src)
}
func (m *SortingOptionPair) XXX_Size() int {
	return xxx_messageInfo_SortingOptionPair.Size(m)
}
func (m *SortingOptionPair) XXX_DiscardUnknown() {
	xxx_messageInfo_SortingOptionPair.DiscardUnknown(m)
}

var xxx_messageInfo_SortingOptionPair proto.InternalMessageInfo

func (m *SortingOptionPair) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SortingOptionPair) GetDirection() SortingDirection {
	if m != nil {
		return m.Direction
	}
	return SortingDirection_ASCENDING
}

//*
// Request to search for edge clusters
type SearchRequest struct {
	// The pagination information
	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// The collection of sorting option determines how the returned data must be sorted
	SortingOptions []*SortingOptionPair `protobuf:"bytes,2,rep,name=sortingOptions,proto3" json:"sortingOptions,omitempty"`
	// The unique edge cluster identifiers
	EdgeClusterIDs []string `protobuf:"bytes,3,rep,name=edgeClusterIDs,proto3" json:"edgeClusterIDs,omitempty"`
	// The unique tenant identifiers
	TenantIDs            []string `protobuf:"bytes,4,rep,name=tenantIDs,proto3" json:"tenantIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{11}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *SearchRequest) GetSortingOptions() []*SortingOptionPair {
	if m != nil {
		return m.SortingOptions
	}
	return nil
}

func (m *SearchRequest) GetEdgeClusterIDs() []string {
	if m != nil {
		return m.EdgeClusterIDs
	}
	return nil
}

func (m *SearchRequest) GetTenantIDs() []string {
	if m != nil {
		return m.TenantIDs
	}
	return nil
}

//
// The pair of edge cluster and a cursor that defines the position of the edge cluster in the repository
// that can later referred to using pagination information.
type EdgeClusterWithCursor struct {
	// The edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,1,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,2,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	// The cursor defines the position of the edge cluster in the repository that can be later
	// referred to using pagination information
	Cursor               string   `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdgeClusterWithCursor) Reset()         { *m = EdgeClusterWithCursor{} }
func (m *EdgeClusterWithCursor) String() string { return proto.CompactTextString(m) }
func (*EdgeClusterWithCursor) ProtoMessage()    {}
func (*EdgeClusterWithCursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{12}
}

func (m *EdgeClusterWithCursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeClusterWithCursor.Unmarshal(m, b)
}
func (m *EdgeClusterWithCursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeClusterWithCursor.Marshal(b, m, deterministic)
}
func (m *EdgeClusterWithCursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeClusterWithCursor.Merge(m, src)
}
func (m *EdgeClusterWithCursor) XXX_Size() int {
	return xxx_messageInfo_EdgeClusterWithCursor.Size(m)
}
func (m *EdgeClusterWithCursor) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeClusterWithCursor.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeClusterWithCursor proto.InternalMessageInfo

func (m *EdgeClusterWithCursor) GetEdgeCluster() *EdgeCluster {
	if m != nil {
		return m.EdgeCluster
	}
	return nil
}

func (m *EdgeClusterWithCursor) GetEdgeClusterID() string {
	if m != nil {
		return m.EdgeClusterID
	}
	return ""
}

func (m *EdgeClusterWithCursor) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

//*
// Response contains the result of searching for edge clusters
type SearchResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// Indicates whether more edges exist prior to the set defined by the clients arguments
	HasPreviousPage bool `protobuf:"varint,3,opt,name=hasPreviousPage,proto3" json:"hasPreviousPage,omitempty"`
	// Indicates whether more edges exist following the set defined by the clients arguments
	HasNextPage bool `protobuf:"varint,4,opt,name=hasNextPage,proto3" json:"hasNextPage,omitempty"`
	// Indicates the total count of the edge clusters that matched the provided filter criteria
	TotalCount int64 `protobuf:"varint,5,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	// The list contains the edge clusters that matched the search criteria
	EdgeClusters         []*EdgeClusterWithCursor `protobuf:"bytes,6,rep,name=edgeClusters,proto3" json:"edgeClusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be558aad5309a67f, []int{13}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *SearchResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *SearchResponse) GetHasPreviousPage() bool {
	if m != nil {
		return m.HasPreviousPage
	}
	return false
}

func (m *SearchResponse) GetHasNextPage() bool {
	if m != nil {
		return m.HasNextPage
	}
	return false
}

func (m *SearchResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *SearchResponse) GetEdgeClusters() []*EdgeClusterWithCursor {
	if m != nil {
		return m.EdgeClusters
	}
	return nil
}

func init() {
	proto.RegisterEnum("edgecluster.Error", Error_name, Error_value)
	proto.RegisterEnum("edgecluster.SortingDirection", SortingDirection_name, SortingDirection_value)
	proto.RegisterType((*EdgeCluster)(nil), "edgecluster.EdgeCluster")
	proto.RegisterType((*CreateEdgeClusterRequest)(nil), "edgecluster.CreateEdgeClusterRequest")
	proto.RegisterType((*CreateEdgeClusterResponse)(nil), "edgecluster.CreateEdgeClusterResponse")
	proto.RegisterType((*ReadEdgeClusterRequest)(nil), "edgecluster.ReadEdgeClusterRequest")
	proto.RegisterType((*ReadEdgeClusterResponse)(nil), "edgecluster.ReadEdgeClusterResponse")
	proto.RegisterType((*UpdateEdgeClusterRequest)(nil), "edgecluster.UpdateEdgeClusterRequest")
	proto.RegisterType((*UpdateEdgeClusterResponse)(nil), "edgecluster.UpdateEdgeClusterResponse")
	proto.RegisterType((*DeleteEdgeClusterRequest)(nil), "edgecluster.DeleteEdgeClusterRequest")
	proto.RegisterType((*DeleteEdgeClusterResponse)(nil), "edgecluster.DeleteEdgeClusterResponse")
	proto.RegisterType((*Pagination)(nil), "edgecluster.Pagination")
	proto.RegisterType((*SortingOptionPair)(nil), "edgecluster.SortingOptionPair")
	proto.RegisterType((*SearchRequest)(nil), "edgecluster.SearchRequest")
	proto.RegisterType((*EdgeClusterWithCursor)(nil), "edgecluster.EdgeClusterWithCursor")
	proto.RegisterType((*SearchResponse)(nil), "edgecluster.SearchResponse")
}

func init() { proto.RegisterFile("edge-cluster.proto", fileDescriptor_be558aad5309a67f) }

var fileDescriptor_be558aad5309a67f = []byte{
	// 896 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x5e, 0xe7, 0xaf, 0xc9, 0x49, 0x9b, 0xba, 0x47, 0xd0, 0x75, 0xb3, 0xb0, 0x54, 0x66, 0x59,
	0x45, 0x95, 0xa8, 0x44, 0x56, 0x02, 0x09, 0x24, 0xa4, 0x6c, 0xec, 0xae, 0xa2, 0x2d, 0x4e, 0x18,
	0x37, 0x2c, 0x48, 0x48, 0xd1, 0x24, 0x9e, 0x26, 0x96, 0x82, 0x1d, 0x66, 0x9c, 0x15, 0x17, 0xbc,
	0x04, 0xbc, 0x02, 0x37, 0xbc, 0x04, 0x6f, 0x81, 0xb8, 0x47, 0xbc, 0x08, 0xf2, 0xd8, 0x4e, 0x6c,
	0xc7, 0x01, 0x2a, 0x54, 0xc1, 0x9d, 0xcf, 0x99, 0x6f, 0xce, 0xcf, 0x37, 0xe7, 0xc7, 0x80, 0xcc,
	0x99, 0xb3, 0xf7, 0x67, 0xcb, 0xb5, 0x08, 0x18, 0xbf, 0x5c, 0x71, 0x3f, 0xf0, 0xb1, 0x19, 0xea,
	0x62, 0x95, 0xbe, 0x86, 0xa6, 0xe9, 0xcc, 0x59, 0x3f, 0x12, 0xb1, 0x0d, 0xf5, 0x80, 0x79, 0xd4,
	0x0b, 0x06, 0x86, 0xa6, 0x9c, 0x2b, 0x9d, 0x06, 0xd9, 0xc8, 0x88, 0x50, 0xf1, 0xe8, 0x37, 0x4c,
	0x2b, 0x49, 0xbd, 0xfc, 0xc6, 0x0f, 0xe1, 0x34, 0xb6, 0x34, 0x5a, 0x4f, 0x97, 0xee, 0x6c, 0x30,
	0xea, 0x39, 0x0e, 0x67, 0x42, 0x68, 0x65, 0x89, 0xda, 0x73, 0xaa, 0x7f, 0x01, 0x5a, 0x9f, 0x33,
	0x1a, 0xb0, 0x94, 0x73, 0xc2, 0xbe, 0x5d, 0x33, 0x11, 0xe0, 0xc7, 0x20, 0x23, 0x8c, 0xb5, 0x32,
	0x8c, 0x66, 0x57, 0xbb, 0x4c, 0x45, 0x7d, 0x99, 0xbe, 0x95, 0x06, 0xeb, 0x7f, 0x28, 0x70, 0x56,
	0x60, 0x58, 0xac, 0x7c, 0x4f, 0x30, 0xec, 0x40, 0x95, 0x71, 0xee, 0x47, 0x36, 0x5b, 0x5d, 0xcc,
	0xda, 0x0c, 0x4f, 0x48, 0x04, 0x40, 0x1d, 0x0e, 0xe5, 0xc7, 0x67, 0x4c, 0x08, 0x3a, 0x4f, 0x72,
	0xce, 0xe8, 0xf0, 0x09, 0x1c, 0xa5, 0x5c, 0x0f, 0x8c, 0x38, 0xe5, 0xac, 0x32, 0x9f, 0x4d, 0xe5,
	0x0e, 0xd9, 0xe0, 0x29, 0xd4, 0x66, 0x6b, 0x2e, 0x7c, 0xae, 0x55, 0xa5, 0xe9, 0x58, 0xd2, 0x3f,
	0x85, 0x53, 0xc2, 0xa8, 0x53, 0xc0, 0xdd, 0x4e, 0x4c, 0x4a, 0x41, 0x4c, 0xfa, 0x4f, 0x0a, 0x3c,
	0xdc, 0x31, 0x70, 0x2f, 0x1c, 0xe5, 0xb2, 0x2f, 0xdf, 0xe5, 0x2d, 0x7f, 0x56, 0x40, 0x1b, 0xaf,
	0x9c, 0xe2, 0x22, 0xf9, 0x47, 0x89, 0xe6, 0xdd, 0x97, 0xee, 0x42, 0xfe, 0x05, 0xa8, 0x2f, 0x9f,
	0xd9, 0xb1, 0x64, 0xb3, 0x19, 0x67, 0x41, 0xfc, 0xc2, 0x3b, 0x7a, 0xfd, 0x17, 0x05, 0xce, 0x0a,
	0x42, 0xfd, 0xbf, 0x51, 0x9a, 0x2a, 0xa8, 0x4a, 0xa6, 0xa0, 0xbe, 0x07, 0xcd, 0x60, 0x4b, 0xf6,
	0xdf, 0x30, 0xad, 0xbb, 0x70, 0x56, 0xe0, 0xfd, 0x3e, 0xc8, 0xd3, 0x7f, 0x55, 0x00, 0x46, 0x74,
	0xee, 0x7a, 0x34, 0x70, 0x7d, 0x2f, 0x1c, 0x77, 0x0b, 0x2a, 0xae, 0x5c, 0x2e, 0x02, 0x69, 0xbf,
	0x4e, 0x36, 0x32, 0xbe, 0x01, 0xd5, 0x5b, 0x79, 0x10, 0xda, 0xa9, 0x92, 0x48, 0x88, 0x6f, 0xf4,
	0x6e, 0x13, 0xea, 0xa3, 0x1b, 0x52, 0x0e, 0x6f, 0xd0, 0xdb, 0xa4, 0xc9, 0x1b, 0x24, 0x12, 0x50,
	0x83, 0x83, 0x05, 0x15, 0xd7, 0x54, 0x04, 0xb2, 0x8b, 0xeb, 0x24, 0x11, 0xc3, 0x81, 0xba, 0x0c,
	0xd5, 0x35, 0xe9, 0x40, 0x7e, 0xe3, 0x5b, 0xd0, 0x58, 0x50, 0xf1, 0x9c, 0xdd, 0xfa, 0x9c, 0x69,
	0x07, 0x12, 0xbf, 0x55, 0x84, 0xef, 0x37, 0x8d, 0x8e, 0xea, 0xd1, 0xfb, 0x45, 0x92, 0xee, 0xc0,
	0x89, 0xed, 0xf3, 0xc0, 0xf5, 0xe6, 0xc3, 0x55, 0x98, 0xd8, 0x88, 0xba, 0x7c, 0x33, 0xaf, 0x95,
	0xd4, 0xbc, 0xfe, 0x04, 0x1a, 0x8e, 0xcb, 0xd9, 0x2c, 0x04, 0xc9, 0xc4, 0x5a, 0xdd, 0xb7, 0x33,
	0x8c, 0xc6, 0x66, 0x8c, 0x04, 0x44, 0xb6, 0x78, 0xfd, 0x37, 0x05, 0x8e, 0x6c, 0x46, 0xf9, 0x6c,
	0x91, 0xd4, 0xc6, 0x47, 0x00, 0xab, 0x0d, 0x9b, 0xf1, 0xa4, 0x7e, 0x98, 0xb1, 0xb7, 0x25, 0x9b,
	0xa4, 0xa0, 0x78, 0x05, 0x2d, 0x91, 0x0e, 0x58, 0x68, 0xa5, 0xf3, 0x72, 0xa7, 0xd9, 0x7d, 0x5c,
	0x14, 0xcc, 0x36, 0x27, 0x92, 0xbb, 0x85, 0x4f, 0xa1, 0x95, 0xa9, 0xc3, 0x70, 0xef, 0x94, 0x3b,
	0x0d, 0x92, 0xd3, 0x86, 0xb4, 0x26, 0x7b, 0x4c, 0x68, 0x15, 0x09, 0xd9, 0x2a, 0xf4, 0x1f, 0x14,
	0x78, 0x33, 0x55, 0x7b, 0xaf, 0xdc, 0x60, 0xd1, 0x97, 0x8d, 0xf1, 0x6f, 0x76, 0xd1, 0x6e, 0xe3,
	0x94, 0x8a, 0x1a, 0x67, 0xdb, 0x92, 0xe5, 0x4c, 0x4b, 0xfe, 0x58, 0x82, 0x56, 0x42, 0xf6, 0xbd,
	0xcc, 0x91, 0x0e, 0x1c, 0x2f, 0xa8, 0x18, 0x71, 0xf6, 0xda, 0xf5, 0xd7, 0x62, 0x14, 0xc2, 0xa2,
	0x82, 0xce, 0xab, 0xf1, 0x1c, 0x9a, 0x0b, 0x2a, 0x2c, 0xf6, 0x5d, 0x20, 0x51, 0x15, 0x89, 0x4a,
	0xab, 0xf0, 0x31, 0x40, 0xe0, 0x07, 0x74, 0xd9, 0xf7, 0xd7, 0x5e, 0x54, 0xe6, 0x65, 0x92, 0xd2,
	0xe0, 0x15, 0x1c, 0xa6, 0xb2, 0x16, 0x5a, 0x4d, 0x3e, 0xb6, 0xbe, 0x8f, 0xc7, 0xed, 0x03, 0x90,
	0xcc, 0xbd, 0x8b, 0x15, 0x54, 0x65, 0x9e, 0x78, 0x08, 0x75, 0x6b, 0x38, 0x31, 0x09, 0x19, 0x12,
	0xf5, 0x01, 0x36, 0xe1, 0x60, 0x6c, 0xbd, 0xb4, 0x86, 0xaf, 0x2c, 0x55, 0xc1, 0x77, 0xe0, 0x91,
	0x69, 0xbc, 0x30, 0x27, 0xfd, 0xeb, 0xb1, 0x7d, 0x63, 0x92, 0x49, 0xef, 0x9a, 0x98, 0x3d, 0xe3,
	0xab, 0x89, 0xf9, 0xe5, 0xc0, 0xbe, 0xb1, 0xd5, 0x12, 0xb6, 0xe1, 0x34, 0x03, 0xb0, 0x86, 0x37,
	0x93, 0xab, 0xe1, 0xd8, 0x32, 0xd4, 0x32, 0x1e, 0x43, 0xf3, 0x79, 0xcf, 0x98, 0x10, 0xf3, 0xf3,
	0xb1, 0x69, 0xdf, 0xa8, 0x95, 0x8b, 0x0f, 0x40, 0xcd, 0xb7, 0x04, 0x1e, 0x41, 0xa3, 0x67, 0xf7,
	0x4d, 0xcb, 0x18, 0x58, 0x2f, 0xd4, 0x07, 0xd8, 0x02, 0x30, 0xcc, 0x8d, 0xac, 0x74, 0x7f, 0x2f,
	0x03, 0xa6, 0x92, 0xb1, 0x19, 0x7f, 0xed, 0xce, 0x18, 0x4e, 0xe1, 0x64, 0xe7, 0xcf, 0x04, 0xdf,
	0xcb, 0x50, 0xb0, 0xef, 0x97, 0xa8, 0xfd, 0xf4, 0xef, 0x60, 0x71, 0x85, 0x7c, 0x0d, 0xc7, 0xb9,
	0xbd, 0x8e, 0xef, 0x66, 0xae, 0x16, 0xff, 0x36, 0xb4, 0x9f, 0xfc, 0x35, 0x28, 0xb6, 0x3e, 0x85,
	0x93, 0x9d, 0x25, 0x97, 0xcb, 0x60, 0xdf, 0xbe, 0xce, 0x65, 0xb0, 0x7f, 0x57, 0x4e, 0xe1, 0x64,
	0x67, 0x17, 0xe4, 0x7c, 0xec, 0xdb, 0x54, 0x39, 0x1f, 0xfb, 0x57, 0x4a, 0x0f, 0x6a, 0x51, 0x67,
	0x61, 0x3b, 0x3b, 0x6e, 0xd2, 0xb3, 0xad, 0xfd, 0xa8, 0xf0, 0x2c, 0x32, 0x31, 0xad, 0xc9, 0x5f,
	0xe9, 0x67, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0xda, 0xcc, 0x56, 0xd1, 0x60, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EdgeClusterServiceClient is the client API for EdgeClusterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EdgeClusterServiceClient interface {
	// CreateEdgeCluster creates a new edge cluster
	// request: The request to create a new edge cluster
	// Returns the result of creating new edge cluster
	CreateEdgeCluster(ctx context.Context, in *CreateEdgeClusterRequest, opts ...grpc.CallOption) (*CreateEdgeClusterResponse, error)
	// ReadEdgeCluster read an exsiting edge cluster
	// request: The request to read an esiting edge cluster
	// Returns the result of reading an exiting edge cluster
	ReadEdgeCluster(ctx context.Context, in *ReadEdgeClusterRequest, opts ...grpc.CallOption) (*ReadEdgeClusterResponse, error)
	// UpdateEdgeCluster update an exsiting edge cluster
	// request: The request to update an esiting edge cluster
	// Returns the result of updateing an exiting edge cluster
	UpdateEdgeCluster(ctx context.Context, in *UpdateEdgeClusterRequest, opts ...grpc.CallOption) (*UpdateEdgeClusterResponse, error)
	// DeleteEdgeCluster delete an exsiting edge cluster
	// request: The request to delete an esiting edge cluster
	// Returns the result of deleting an exiting edge cluster
	DeleteEdgeCluster(ctx context.Context, in *DeleteEdgeClusterRequest, opts ...grpc.CallOption) (*DeleteEdgeClusterResponse, error)
	// Search returns the list of edge clusters that matched the criteria
	// request: The request contains the search criteria
	// Returns the list of edge clusters that matched the criteria
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type edgeClusterServiceClient struct {
	cc *grpc.ClientConn
}

func NewEdgeClusterServiceClient(cc *grpc.ClientConn) EdgeClusterServiceClient {
	return &edgeClusterServiceClient{cc}
}

func (c *edgeClusterServiceClient) CreateEdgeCluster(ctx context.Context, in *CreateEdgeClusterRequest, opts ...grpc.CallOption) (*CreateEdgeClusterResponse, error) {
	out := new(CreateEdgeClusterResponse)
	err := c.cc.Invoke(ctx, "/edgecluster.EdgeClusterService/CreateEdgeCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *edgeClusterServiceClient) ReadEdgeCluster(ctx context.Context, in *ReadEdgeClusterRequest, opts ...grpc.CallOption) (*ReadEdgeClusterResponse, error) {
	out := new(ReadEdgeClusterResponse)
	err := c.cc.Invoke(ctx, "/edgecluster.EdgeClusterService/ReadEdgeCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *edgeClusterServiceClient) UpdateEdgeCluster(ctx context.Context, in *UpdateEdgeClusterRequest, opts ...grpc.CallOption) (*UpdateEdgeClusterResponse, error) {
	out := new(UpdateEdgeClusterResponse)
	err := c.cc.Invoke(ctx, "/edgecluster.EdgeClusterService/UpdateEdgeCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *edgeClusterServiceClient) DeleteEdgeCluster(ctx context.Context, in *DeleteEdgeClusterRequest, opts ...grpc.CallOption) (*DeleteEdgeClusterResponse, error) {
	out := new(DeleteEdgeClusterResponse)
	err := c.cc.Invoke(ctx, "/edgecluster.EdgeClusterService/DeleteEdgeCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *edgeClusterServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/edgecluster.EdgeClusterService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EdgeClusterServiceServer is the server API for EdgeClusterService service.
type EdgeClusterServiceServer interface {
	// CreateEdgeCluster creates a new edge cluster
	// request: The request to create a new edge cluster
	// Returns the result of creating new edge cluster
	CreateEdgeCluster(context.Context, *CreateEdgeClusterRequest) (*CreateEdgeClusterResponse, error)
	// ReadEdgeCluster read an exsiting edge cluster
	// request: The request to read an esiting edge cluster
	// Returns the result of reading an exiting edge cluster
	ReadEdgeCluster(context.Context, *ReadEdgeClusterRequest) (*ReadEdgeClusterResponse, error)
	// UpdateEdgeCluster update an exsiting edge cluster
	// request: The request to update an esiting edge cluster
	// Returns the result of updateing an exiting edge cluster
	UpdateEdgeCluster(context.Context, *UpdateEdgeClusterRequest) (*UpdateEdgeClusterResponse, error)
	// DeleteEdgeCluster delete an exsiting edge cluster
	// request: The request to delete an esiting edge cluster
	// Returns the result of deleting an exiting edge cluster
	DeleteEdgeCluster(context.Context, *DeleteEdgeClusterRequest) (*DeleteEdgeClusterResponse, error)
	// Search returns the list of edge clusters that matched the criteria
	// request: The request contains the search criteria
	// Returns the list of edge clusters that matched the criteria
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

// UnimplementedEdgeClusterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEdgeClusterServiceServer struct {
}

func (*UnimplementedEdgeClusterServiceServer) CreateEdgeCluster(ctx context.Context, req *CreateEdgeClusterRequest) (*CreateEdgeClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEdgeCluster not implemented")
}
func (*UnimplementedEdgeClusterServiceServer) ReadEdgeCluster(ctx context.Context, req *ReadEdgeClusterRequest) (*ReadEdgeClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadEdgeCluster not implemented")
}
func (*UnimplementedEdgeClusterServiceServer) UpdateEdgeCluster(ctx context.Context, req *UpdateEdgeClusterRequest) (*UpdateEdgeClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEdgeCluster not implemented")
}
func (*UnimplementedEdgeClusterServiceServer) DeleteEdgeCluster(ctx context.Context, req *DeleteEdgeClusterRequest) (*DeleteEdgeClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEdgeCluster not implemented")
}
func (*UnimplementedEdgeClusterServiceServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}

func RegisterEdgeClusterServiceServer(s *grpc.Server, srv EdgeClusterServiceServer) {
	s.RegisterService(&_EdgeClusterService_serviceDesc, srv)
}

func _EdgeClusterService_CreateEdgeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEdgeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeClusterServiceServer).CreateEdgeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/edgecluster.EdgeClusterService/CreateEdgeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeClusterServiceServer).CreateEdgeCluster(ctx, req.(*CreateEdgeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EdgeClusterService_ReadEdgeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadEdgeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeClusterServiceServer).ReadEdgeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/edgecluster.EdgeClusterService/ReadEdgeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeClusterServiceServer).ReadEdgeCluster(ctx, req.(*ReadEdgeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EdgeClusterService_UpdateEdgeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEdgeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeClusterServiceServer).UpdateEdgeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/edgecluster.EdgeClusterService/UpdateEdgeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeClusterServiceServer).UpdateEdgeCluster(ctx, req.(*UpdateEdgeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EdgeClusterService_DeleteEdgeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEdgeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeClusterServiceServer).DeleteEdgeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/edgecluster.EdgeClusterService/DeleteEdgeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeClusterServiceServer).DeleteEdgeCluster(ctx, req.(*DeleteEdgeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EdgeClusterService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeClusterServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/edgecluster.EdgeClusterService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeClusterServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EdgeClusterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "edgecluster.EdgeClusterService",
	HandlerType: (*EdgeClusterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEdgeCluster",
			Handler:    _EdgeClusterService_CreateEdgeCluster_Handler,
		},
		{
			MethodName: "ReadEdgeCluster",
			Handler:    _EdgeClusterService_ReadEdgeCluster_Handler,
		},
		{
			MethodName: "UpdateEdgeCluster",
			Handler:    _EdgeClusterService_UpdateEdgeCluster_Handler,
		},
		{
			MethodName: "DeleteEdgeCluster",
			Handler:    _EdgeClusterService_DeleteEdgeCluster_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _EdgeClusterService_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "edge-cluster.proto",
}
