// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: edge-cluster-messages.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
// The different cluster types
type ClusterType int32

const (
	// K3S cluster
	ClusterType_K3S ClusterType = 0
)

// Enum value maps for ClusterType.
var (
	ClusterType_name = map[int32]string{
		0: "K3S",
	}
	ClusterType_value = map[string]int32{
		"K3S": 0,
	}
)

func (x ClusterType) Enum() *ClusterType {
	p := new(ClusterType)
	*p = x
	return p
}

func (x ClusterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterType) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_cluster_messages_proto_enumTypes[0].Descriptor()
}

func (ClusterType) Type() protoreflect.EnumType {
	return &file_edge_cluster_messages_proto_enumTypes[0]
}

func (x ClusterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterType.Descriptor instead.
func (ClusterType) EnumDescriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{0}
}

//*
// The edge cluster object
type EdgeCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique project identifier that owns the edge cluster
	ProjectID string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	// The edge cluster name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Cluster secret value
	ClusterSecret string `protobuf:"bytes,3,opt,name=clusterSecret,proto3" json:"clusterSecret,omitempty"`
	// Cluster type
	ClusterType ClusterType `protobuf:"varint,4,opt,name=clusterType,proto3,enum=edgecluster.ClusterType" json:"clusterType,omitempty"`
}

func (x *EdgeCluster) Reset() {
	*x = EdgeCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeCluster) ProtoMessage() {}

func (x *EdgeCluster) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeCluster.ProtoReflect.Descriptor instead.
func (*EdgeCluster) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{0}
}

func (x *EdgeCluster) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *EdgeCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EdgeCluster) GetClusterSecret() string {
	if x != nil {
		return x.ClusterSecret
	}
	return ""
}

func (x *EdgeCluster) GetClusterType() ClusterType {
	if x != nil {
		return x.ClusterType
	}
	return ClusterType_K3S
}

//*
// The edge cluster provision details contains details such as current status of the edge cluster
// as well as ingress address of the edge cluster to connect to
type ProvisionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LoadBalancer contains the current status of the load-balancer,
	// if one is present.
	LoadBalancer *LoadBalancerStatus `protobuf:"bytes,1,opt,name=loadBalancer,proto3" json:"loadBalancer,omitempty"`
	// The provisioned edge cluster kubeconfig content
	KubeConfigContent string `protobuf:"bytes,2,opt,name=kubeConfigContent,proto3" json:"kubeConfigContent,omitempty"`
}

func (x *ProvisionDetail) Reset() {
	*x = ProvisionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionDetail) ProtoMessage() {}

func (x *ProvisionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionDetail.ProtoReflect.Descriptor instead.
func (*ProvisionDetail) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ProvisionDetail) GetLoadBalancer() *LoadBalancerStatus {
	if x != nil {
		return x.LoadBalancer
	}
	return nil
}

func (x *ProvisionDetail) GetKubeConfigContent() string {
	if x != nil {
		return x.KubeConfigContent
	}
	return ""
}

//*
// Request to create a new edge cluster
type CreateEdgeClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,1,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
}

func (x *CreateEdgeClusterRequest) Reset() {
	*x = CreateEdgeClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEdgeClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEdgeClusterRequest) ProtoMessage() {}

func (x *CreateEdgeClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEdgeClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEdgeClusterRequest) GetEdgeCluster() *EdgeCluster {
	if x != nil {
		return x.EdgeCluster
	}
	return nil
}

//*
// Response contains the result of creating a new edge cluster
type CreateEdgeClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,3,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	// The created edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,4,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	// The cursor defines the position of the edge cluster in the repository that can be later
	// referred to using pagination information
	Cursor string `protobuf:"bytes,5,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// The edge cluster provision details
	ProvisionDetail *ProvisionDetail `protobuf:"bytes,6,opt,name=provisionDetail,proto3" json:"provisionDetail,omitempty"`
}

func (x *CreateEdgeClusterResponse) Reset() {
	*x = CreateEdgeClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEdgeClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEdgeClusterResponse) ProtoMessage() {}

func (x *CreateEdgeClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEdgeClusterResponse.ProtoReflect.Descriptor instead.
func (*CreateEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEdgeClusterResponse) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_NO_ERROR
}

func (x *CreateEdgeClusterResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateEdgeClusterResponse) GetEdgeClusterID() string {
	if x != nil {
		return x.EdgeClusterID
	}
	return ""
}

func (x *CreateEdgeClusterResponse) GetEdgeCluster() *EdgeCluster {
	if x != nil {
		return x.EdgeCluster
	}
	return nil
}

func (x *CreateEdgeClusterResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *CreateEdgeClusterResponse) GetProvisionDetail() *ProvisionDetail {
	if x != nil {
		return x.ProvisionDetail
	}
	return nil
}

//* Request to read an existing edge cluster
type ReadEdgeClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,1,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
}

func (x *ReadEdgeClusterRequest) Reset() {
	*x = ReadEdgeClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadEdgeClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEdgeClusterRequest) ProtoMessage() {}

func (x *ReadEdgeClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEdgeClusterRequest.ProtoReflect.Descriptor instead.
func (*ReadEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{4}
}

func (x *ReadEdgeClusterRequest) GetEdgeClusterID() string {
	if x != nil {
		return x.EdgeClusterID
	}
	return ""
}

//*
// Response contains the result of reading an existing edge cluster
type ReadEdgeClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,3,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	// The edge cluster provision details
	ProvisionDetail *ProvisionDetail `protobuf:"bytes,6,opt,name=provisionDetail,proto3" json:"provisionDetail,omitempty"`
}

func (x *ReadEdgeClusterResponse) Reset() {
	*x = ReadEdgeClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadEdgeClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEdgeClusterResponse) ProtoMessage() {}

func (x *ReadEdgeClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEdgeClusterResponse.ProtoReflect.Descriptor instead.
func (*ReadEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{5}
}

func (x *ReadEdgeClusterResponse) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_NO_ERROR
}

func (x *ReadEdgeClusterResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReadEdgeClusterResponse) GetEdgeCluster() *EdgeCluster {
	if x != nil {
		return x.EdgeCluster
	}
	return nil
}

func (x *ReadEdgeClusterResponse) GetProvisionDetail() *ProvisionDetail {
	if x != nil {
		return x.ProvisionDetail
	}
	return nil
}

//*
// Request to update an existing edge cluster
type UpdateEdgeClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,1,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	// The edge cluster object contains the updated edge cluster details to update
	EdgeCluster *EdgeCluster `protobuf:"bytes,2,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
}

func (x *UpdateEdgeClusterRequest) Reset() {
	*x = UpdateEdgeClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEdgeClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEdgeClusterRequest) ProtoMessage() {}

func (x *UpdateEdgeClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEdgeClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateEdgeClusterRequest) GetEdgeClusterID() string {
	if x != nil {
		return x.EdgeClusterID
	}
	return ""
}

func (x *UpdateEdgeClusterRequest) GetEdgeCluster() *EdgeCluster {
	if x != nil {
		return x.EdgeCluster
	}
	return nil
}

//*
// Response contains the result of updating an existing edge cluster
type UpdateEdgeClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The updated edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,3,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	// The cursor defines the position of the edge cluster in the repository that can be later
	// referred to using pagination information
	Cursor string `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// The edge cluster provision details
	ProvisionDetail *ProvisionDetail `protobuf:"bytes,6,opt,name=provisionDetail,proto3" json:"provisionDetail,omitempty"`
}

func (x *UpdateEdgeClusterResponse) Reset() {
	*x = UpdateEdgeClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEdgeClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEdgeClusterResponse) ProtoMessage() {}

func (x *UpdateEdgeClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEdgeClusterResponse.ProtoReflect.Descriptor instead.
func (*UpdateEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateEdgeClusterResponse) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_NO_ERROR
}

func (x *UpdateEdgeClusterResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateEdgeClusterResponse) GetEdgeCluster() *EdgeCluster {
	if x != nil {
		return x.EdgeCluster
	}
	return nil
}

func (x *UpdateEdgeClusterResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *UpdateEdgeClusterResponse) GetProvisionDetail() *ProvisionDetail {
	if x != nil {
		return x.ProvisionDetail
	}
	return nil
}

//*
// Request to delete an existing edge cluster
type DeleteEdgeClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,1,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
}

func (x *DeleteEdgeClusterRequest) Reset() {
	*x = DeleteEdgeClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEdgeClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEdgeClusterRequest) ProtoMessage() {}

func (x *DeleteEdgeClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEdgeClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteEdgeClusterRequest) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteEdgeClusterRequest) GetEdgeClusterID() string {
	if x != nil {
		return x.EdgeClusterID
	}
	return ""
}

//*
// Response contains the result of deleting an existing edge cluster
type DeleteEdgeClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *DeleteEdgeClusterResponse) Reset() {
	*x = DeleteEdgeClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEdgeClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEdgeClusterResponse) ProtoMessage() {}

func (x *DeleteEdgeClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEdgeClusterResponse.ProtoReflect.Descriptor instead.
func (*DeleteEdgeClusterResponse) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteEdgeClusterResponse) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_NO_ERROR
}

func (x *DeleteEdgeClusterResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

//*
// Request to search for edge clusters
type ListEdgeClustersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The pagination information
	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// The collection of sorting option determines how the returned data must be sorted
	SortingOptions []*SortingOptionPair `protobuf:"bytes,2,rep,name=sortingOptions,proto3" json:"sortingOptions,omitempty"`
	// The unique edge cluster identifiers
	EdgeClusterIDs []string `protobuf:"bytes,3,rep,name=edgeClusterIDs,proto3" json:"edgeClusterIDs,omitempty"`
	// The unique project identifiers
	ProjectIDs []string `protobuf:"bytes,4,rep,name=projectIDs,proto3" json:"projectIDs,omitempty"`
}

func (x *ListEdgeClustersRequest) Reset() {
	*x = ListEdgeClustersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEdgeClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEdgeClustersRequest) ProtoMessage() {}

func (x *ListEdgeClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEdgeClustersRequest.ProtoReflect.Descriptor instead.
func (*ListEdgeClustersRequest) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{10}
}

func (x *ListEdgeClustersRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListEdgeClustersRequest) GetSortingOptions() []*SortingOptionPair {
	if x != nil {
		return x.SortingOptions
	}
	return nil
}

func (x *ListEdgeClustersRequest) GetEdgeClusterIDs() []string {
	if x != nil {
		return x.EdgeClusterIDs
	}
	return nil
}

func (x *ListEdgeClustersRequest) GetProjectIDs() []string {
	if x != nil {
		return x.ProjectIDs
	}
	return nil
}

//
// The pair of edge cluster and a cursor that defines the position of the edge cluster in the repository
// that can later referred to using pagination information.
type EdgeClusterWithCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique edge cluster identifier
	EdgeClusterID string `protobuf:"bytes,1,opt,name=edgeClusterID,proto3" json:"edgeClusterID,omitempty"`
	// The cursor defines the position of the edge cluster in the repository that can be later
	// referred to using pagination information
	Cursor string `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// The edge cluster object
	EdgeCluster *EdgeCluster `protobuf:"bytes,3,opt,name=edgeCluster,proto3" json:"edgeCluster,omitempty"`
	// The edge cluster provision details
	ProvisionDetail *ProvisionDetail `protobuf:"bytes,4,opt,name=provisionDetail,proto3" json:"provisionDetail,omitempty"`
}

func (x *EdgeClusterWithCursor) Reset() {
	*x = EdgeClusterWithCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeClusterWithCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeClusterWithCursor) ProtoMessage() {}

func (x *EdgeClusterWithCursor) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeClusterWithCursor.ProtoReflect.Descriptor instead.
func (*EdgeClusterWithCursor) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{11}
}

func (x *EdgeClusterWithCursor) GetEdgeClusterID() string {
	if x != nil {
		return x.EdgeClusterID
	}
	return ""
}

func (x *EdgeClusterWithCursor) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *EdgeClusterWithCursor) GetEdgeCluster() *EdgeCluster {
	if x != nil {
		return x.EdgeCluster
	}
	return nil
}

func (x *EdgeClusterWithCursor) GetProvisionDetail() *ProvisionDetail {
	if x != nil {
		return x.ProvisionDetail
	}
	return nil
}

//*
// Response contains the result of searching for edge clusters
type ListEdgeClustersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=edgecluster.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// Indicates whether more edges exist prior to the set defined by the clients arguments
	HasPreviousPage bool `protobuf:"varint,3,opt,name=hasPreviousPage,proto3" json:"hasPreviousPage,omitempty"`
	// Indicates whether more edges exist following the set defined by the clients arguments
	HasNextPage bool `protobuf:"varint,4,opt,name=hasNextPage,proto3" json:"hasNextPage,omitempty"`
	// Indicates the total count of the edge clusters that matched the provided filter criteria
	TotalCount int64 `protobuf:"varint,5,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	// The list contains the edge clusters that matched the search criteria
	EdgeClusters []*EdgeClusterWithCursor `protobuf:"bytes,6,rep,name=edgeClusters,proto3" json:"edgeClusters,omitempty"`
}

func (x *ListEdgeClustersResponse) Reset() {
	*x = ListEdgeClustersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cluster_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEdgeClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEdgeClustersResponse) ProtoMessage() {}

func (x *ListEdgeClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cluster_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEdgeClustersResponse.ProtoReflect.Descriptor instead.
func (*ListEdgeClustersResponse) Descriptor() ([]byte, []int) {
	return file_edge_cluster_messages_proto_rawDescGZIP(), []int{12}
}

func (x *ListEdgeClustersResponse) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_NO_ERROR
}

func (x *ListEdgeClustersResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ListEdgeClustersResponse) GetHasPreviousPage() bool {
	if x != nil {
		return x.HasPreviousPage
	}
	return false
}

func (x *ListEdgeClustersResponse) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

func (x *ListEdgeClustersResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListEdgeClustersResponse) GetEdgeClusters() []*EdgeClusterWithCursor {
	if x != nil {
		return x.EdgeClusters
	}
	return nil
}

var File_edge_cluster_messages_proto protoreflect.FileDescriptor

var file_edge_cluster_messages_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x64, 0x67, 0x65, 0x2d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65,
	0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x45, 0x64,
	0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x84, 0x01,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x43, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x6b, 0x75, 0x62, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x6b, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0xab, 0x02, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x64, 0x67, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3a,
	0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x65,
	0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x3e, 0x0a, 0x16, 0x52, 0x65,
	0x61, 0x64, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x64, 0x67,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0xeb, 0x01, 0x0a, 0x17, 0x52,
	0x65, 0x61, 0x64, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x46, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x7c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x64, 0x67,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x64,
	0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x64,
	0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x85, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x40,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x64,
	0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x69, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x64, 0x67, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73,
	0x22, 0xd9, 0x01, 0x0a, 0x15, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x64,
	0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x9c, 0x02, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x0c, 0x65,
	0x64, 0x67, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2a, 0x16, 0x0a, 0x0b, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x33,
	0x53, 0x10, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_edge_cluster_messages_proto_rawDescOnce sync.Once
	file_edge_cluster_messages_proto_rawDescData = file_edge_cluster_messages_proto_rawDesc
)

func file_edge_cluster_messages_proto_rawDescGZIP() []byte {
	file_edge_cluster_messages_proto_rawDescOnce.Do(func() {
		file_edge_cluster_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_edge_cluster_messages_proto_rawDescData)
	})
	return file_edge_cluster_messages_proto_rawDescData
}

var file_edge_cluster_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_edge_cluster_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_edge_cluster_messages_proto_goTypes = []interface{}{
	(ClusterType)(0),                  // 0: edgecluster.ClusterType
	(*EdgeCluster)(nil),               // 1: edgecluster.EdgeCluster
	(*ProvisionDetail)(nil),           // 2: edgecluster.ProvisionDetail
	(*CreateEdgeClusterRequest)(nil),  // 3: edgecluster.CreateEdgeClusterRequest
	(*CreateEdgeClusterResponse)(nil), // 4: edgecluster.CreateEdgeClusterResponse
	(*ReadEdgeClusterRequest)(nil),    // 5: edgecluster.ReadEdgeClusterRequest
	(*ReadEdgeClusterResponse)(nil),   // 6: edgecluster.ReadEdgeClusterResponse
	(*UpdateEdgeClusterRequest)(nil),  // 7: edgecluster.UpdateEdgeClusterRequest
	(*UpdateEdgeClusterResponse)(nil), // 8: edgecluster.UpdateEdgeClusterResponse
	(*DeleteEdgeClusterRequest)(nil),  // 9: edgecluster.DeleteEdgeClusterRequest
	(*DeleteEdgeClusterResponse)(nil), // 10: edgecluster.DeleteEdgeClusterResponse
	(*ListEdgeClustersRequest)(nil),   // 11: edgecluster.ListEdgeClustersRequest
	(*EdgeClusterWithCursor)(nil),     // 12: edgecluster.EdgeClusterWithCursor
	(*ListEdgeClustersResponse)(nil),  // 13: edgecluster.ListEdgeClustersResponse
	(*LoadBalancerStatus)(nil),        // 14: edgecluster.LoadBalancerStatus
	(Error)(0),                        // 15: edgecluster.Error
	(*Pagination)(nil),                // 16: edgecluster.Pagination
	(*SortingOptionPair)(nil),         // 17: edgecluster.SortingOptionPair
}
var file_edge_cluster_messages_proto_depIdxs = []int32{
	0,  // 0: edgecluster.EdgeCluster.clusterType:type_name -> edgecluster.ClusterType
	14, // 1: edgecluster.ProvisionDetail.loadBalancer:type_name -> edgecluster.LoadBalancerStatus
	1,  // 2: edgecluster.CreateEdgeClusterRequest.edgeCluster:type_name -> edgecluster.EdgeCluster
	15, // 3: edgecluster.CreateEdgeClusterResponse.error:type_name -> edgecluster.Error
	1,  // 4: edgecluster.CreateEdgeClusterResponse.edgeCluster:type_name -> edgecluster.EdgeCluster
	2,  // 5: edgecluster.CreateEdgeClusterResponse.provisionDetail:type_name -> edgecluster.ProvisionDetail
	15, // 6: edgecluster.ReadEdgeClusterResponse.error:type_name -> edgecluster.Error
	1,  // 7: edgecluster.ReadEdgeClusterResponse.edgeCluster:type_name -> edgecluster.EdgeCluster
	2,  // 8: edgecluster.ReadEdgeClusterResponse.provisionDetail:type_name -> edgecluster.ProvisionDetail
	1,  // 9: edgecluster.UpdateEdgeClusterRequest.edgeCluster:type_name -> edgecluster.EdgeCluster
	15, // 10: edgecluster.UpdateEdgeClusterResponse.error:type_name -> edgecluster.Error
	1,  // 11: edgecluster.UpdateEdgeClusterResponse.edgeCluster:type_name -> edgecluster.EdgeCluster
	2,  // 12: edgecluster.UpdateEdgeClusterResponse.provisionDetail:type_name -> edgecluster.ProvisionDetail
	15, // 13: edgecluster.DeleteEdgeClusterResponse.error:type_name -> edgecluster.Error
	16, // 14: edgecluster.ListEdgeClustersRequest.pagination:type_name -> edgecluster.Pagination
	17, // 15: edgecluster.ListEdgeClustersRequest.sortingOptions:type_name -> edgecluster.SortingOptionPair
	1,  // 16: edgecluster.EdgeClusterWithCursor.edgeCluster:type_name -> edgecluster.EdgeCluster
	2,  // 17: edgecluster.EdgeClusterWithCursor.provisionDetail:type_name -> edgecluster.ProvisionDetail
	15, // 18: edgecluster.ListEdgeClustersResponse.error:type_name -> edgecluster.Error
	12, // 19: edgecluster.ListEdgeClustersResponse.edgeClusters:type_name -> edgecluster.EdgeClusterWithCursor
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_edge_cluster_messages_proto_init() }
func file_edge_cluster_messages_proto_init() {
	if File_edge_cluster_messages_proto != nil {
		return
	}
	file_commons_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_edge_cluster_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEdgeClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEdgeClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadEdgeClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadEdgeClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEdgeClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEdgeClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEdgeClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEdgeClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEdgeClustersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeClusterWithCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cluster_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEdgeClustersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_edge_cluster_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_edge_cluster_messages_proto_goTypes,
		DependencyIndexes: file_edge_cluster_messages_proto_depIdxs,
		EnumInfos:         file_edge_cluster_messages_proto_enumTypes,
		MessageInfos:      file_edge_cluster_messages_proto_msgTypes,
	}.Build()
	File_edge_cluster_messages_proto = out.File
	file_edge_cluster_messages_proto_rawDesc = nil
	file_edge_cluster_messages_proto_goTypes = nil
	file_edge_cluster_messages_proto_depIdxs = nil
}
