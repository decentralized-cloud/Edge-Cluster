// Code generated by MockGen. DO NOT EDIT.
// Source: ../contract.go

// Package mock_types is a generated GoMock package.
package mock_types

import (
	context "context"
	types "github.com/decentralized-cloud/edge-cluster/services/edgecluster/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEdgeClusterFactoryContract is a mock of EdgeClusterFactoryContract interface
type MockEdgeClusterFactoryContract struct {
	ctrl     *gomock.Controller
	recorder *MockEdgeClusterFactoryContractMockRecorder
}

// MockEdgeClusterFactoryContractMockRecorder is the mock recorder for MockEdgeClusterFactoryContract
type MockEdgeClusterFactoryContractMockRecorder struct {
	mock *MockEdgeClusterFactoryContract
}

// NewMockEdgeClusterFactoryContract creates a new mock instance
func NewMockEdgeClusterFactoryContract(ctrl *gomock.Controller) *MockEdgeClusterFactoryContract {
	mock := &MockEdgeClusterFactoryContract{ctrl: ctrl}
	mock.recorder = &MockEdgeClusterFactoryContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEdgeClusterFactoryContract) EXPECT() *MockEdgeClusterFactoryContractMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockEdgeClusterFactoryContract) Create(ctx context.Context, edgeClusterType types.EdgeClusterType) (types.EdgeClusterProvisionerContract, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, edgeClusterType)
	ret0, _ := ret[0].(types.EdgeClusterProvisionerContract)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockEdgeClusterFactoryContractMockRecorder) Create(ctx, edgeClusterType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockEdgeClusterFactoryContract)(nil).Create), ctx, edgeClusterType)
}

// MockEdgeClusterProvisionerContract is a mock of EdgeClusterProvisionerContract interface
type MockEdgeClusterProvisionerContract struct {
	ctrl     *gomock.Controller
	recorder *MockEdgeClusterProvisionerContractMockRecorder
}

// MockEdgeClusterProvisionerContractMockRecorder is the mock recorder for MockEdgeClusterProvisionerContract
type MockEdgeClusterProvisionerContractMockRecorder struct {
	mock *MockEdgeClusterProvisionerContract
}

// NewMockEdgeClusterProvisionerContract creates a new mock instance
func NewMockEdgeClusterProvisionerContract(ctrl *gomock.Controller) *MockEdgeClusterProvisionerContract {
	mock := &MockEdgeClusterProvisionerContract{ctrl: ctrl}
	mock.recorder = &MockEdgeClusterProvisionerContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEdgeClusterProvisionerContract) EXPECT() *MockEdgeClusterProvisionerContractMockRecorder {
	return m.recorder
}

// NewProvision mocks base method
func (m *MockEdgeClusterProvisionerContract) NewProvision(ctx context.Context, request *types.NewProvisionRequest) (*types.NewProvisionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewProvision", ctx, request)
	ret0, _ := ret[0].(*types.NewProvisionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewProvision indicates an expected call of NewProvision
func (mr *MockEdgeClusterProvisionerContractMockRecorder) NewProvision(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewProvision", reflect.TypeOf((*MockEdgeClusterProvisionerContract)(nil).NewProvision), ctx, request)
}
