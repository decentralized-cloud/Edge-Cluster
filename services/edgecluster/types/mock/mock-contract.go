// Code generated by MockGen. DO NOT EDIT.
// Source: services/edgecluster/types/contract.go

// Package mock_types is a generated GoMock package.
package mock_types

import (
	context "context"
	reflect "reflect"

	models "github.com/decentralized-cloud/edge-cluster/models"
	types "github.com/decentralized-cloud/edge-cluster/services/edgecluster/types"
	gomock "github.com/golang/mock/gomock"
)

// MockEdgeClusterFactoryContract is a mock of EdgeClusterFactoryContract interface.
type MockEdgeClusterFactoryContract struct {
	ctrl     *gomock.Controller
	recorder *MockEdgeClusterFactoryContractMockRecorder
}

// MockEdgeClusterFactoryContractMockRecorder is the mock recorder for MockEdgeClusterFactoryContract.
type MockEdgeClusterFactoryContractMockRecorder struct {
	mock *MockEdgeClusterFactoryContract
}

// NewMockEdgeClusterFactoryContract creates a new mock instance.
func NewMockEdgeClusterFactoryContract(ctrl *gomock.Controller) *MockEdgeClusterFactoryContract {
	mock := &MockEdgeClusterFactoryContract{ctrl: ctrl}
	mock.recorder = &MockEdgeClusterFactoryContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEdgeClusterFactoryContract) EXPECT() *MockEdgeClusterFactoryContractMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockEdgeClusterFactoryContract) Create(ctx context.Context, clusterType models.ClusterType) (types.EdgeClusterProvisionerContract, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, clusterType)
	ret0, _ := ret[0].(types.EdgeClusterProvisionerContract)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockEdgeClusterFactoryContractMockRecorder) Create(ctx, clusterType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockEdgeClusterFactoryContract)(nil).Create), ctx, clusterType)
}

// MockEdgeClusterProvisionerContract is a mock of EdgeClusterProvisionerContract interface.
type MockEdgeClusterProvisionerContract struct {
	ctrl     *gomock.Controller
	recorder *MockEdgeClusterProvisionerContractMockRecorder
}

// MockEdgeClusterProvisionerContractMockRecorder is the mock recorder for MockEdgeClusterProvisionerContract.
type MockEdgeClusterProvisionerContractMockRecorder struct {
	mock *MockEdgeClusterProvisionerContract
}

// NewMockEdgeClusterProvisionerContract creates a new mock instance.
func NewMockEdgeClusterProvisionerContract(ctrl *gomock.Controller) *MockEdgeClusterProvisionerContract {
	mock := &MockEdgeClusterProvisionerContract{ctrl: ctrl}
	mock.recorder = &MockEdgeClusterProvisionerContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEdgeClusterProvisionerContract) EXPECT() *MockEdgeClusterProvisionerContractMockRecorder {
	return m.recorder
}

// CreateProvision mocks base method.
func (m *MockEdgeClusterProvisionerContract) CreateProvision(ctx context.Context, request *types.CreateProvisionRequest) (*types.CreateProvisionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProvision", ctx, request)
	ret0, _ := ret[0].(*types.CreateProvisionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProvision indicates an expected call of CreateProvision.
func (mr *MockEdgeClusterProvisionerContractMockRecorder) CreateProvision(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProvision", reflect.TypeOf((*MockEdgeClusterProvisionerContract)(nil).CreateProvision), ctx, request)
}

// DeleteProvision mocks base method.
func (m *MockEdgeClusterProvisionerContract) DeleteProvision(ctx context.Context, request *types.DeleteProvisionRequest) (*types.DeleteProvisionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProvision", ctx, request)
	ret0, _ := ret[0].(*types.DeleteProvisionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteProvision indicates an expected call of DeleteProvision.
func (mr *MockEdgeClusterProvisionerContractMockRecorder) DeleteProvision(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProvision", reflect.TypeOf((*MockEdgeClusterProvisionerContract)(nil).DeleteProvision), ctx, request)
}

// GetProvisionDetails mocks base method.
func (m *MockEdgeClusterProvisionerContract) GetProvisionDetails(ctx context.Context, request *types.GetProvisionDetailsRequest) (*types.GetProvisionDetailsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProvisionDetails", ctx, request)
	ret0, _ := ret[0].(*types.GetProvisionDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProvisionDetails indicates an expected call of GetProvisionDetails.
func (mr *MockEdgeClusterProvisionerContractMockRecorder) GetProvisionDetails(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProvisionDetails", reflect.TypeOf((*MockEdgeClusterProvisionerContract)(nil).GetProvisionDetails), ctx, request)
}

// ListNodes mocks base method.
func (m *MockEdgeClusterProvisionerContract) ListNodes(ctx context.Context, request *types.ListNodesRequest) (*types.ListNodesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNodes", ctx, request)
	ret0, _ := ret[0].(*types.ListNodesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNodes indicates an expected call of ListNodes.
func (mr *MockEdgeClusterProvisionerContractMockRecorder) ListNodes(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNodes", reflect.TypeOf((*MockEdgeClusterProvisionerContract)(nil).ListNodes), ctx, request)
}

// ListPods mocks base method.
func (m *MockEdgeClusterProvisionerContract) ListPods(ctx context.Context, request *types.ListPodsRequest) (*types.ListPodsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPods", ctx, request)
	ret0, _ := ret[0].(*types.ListPodsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPods indicates an expected call of ListPods.
func (mr *MockEdgeClusterProvisionerContractMockRecorder) ListPods(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPods", reflect.TypeOf((*MockEdgeClusterProvisionerContract)(nil).ListPods), ctx, request)
}

// UpdateProvisionWithRetry mocks base method.
func (m *MockEdgeClusterProvisionerContract) UpdateProvisionWithRetry(ctx context.Context, request *types.UpdateProvisionRequest) (*types.UpdateProvisionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProvisionWithRetry", ctx, request)
	ret0, _ := ret[0].(*types.UpdateProvisionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProvisionWithRetry indicates an expected call of UpdateProvisionWithRetry.
func (mr *MockEdgeClusterProvisionerContractMockRecorder) UpdateProvisionWithRetry(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProvisionWithRetry", reflect.TypeOf((*MockEdgeClusterProvisionerContract)(nil).UpdateProvisionWithRetry), ctx, request)
}
